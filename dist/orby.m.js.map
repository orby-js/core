{"version":3,"file":"orby.m.js","sources":["../src/vdom.js","../src/dom.js","../src/diff.js"],"sourcesContent":["export class VDom {\r\n    /**\r\n     *\r\n     * @param {Function|String} tag - Node component or label\r\n     * @param {Object} props - Properties of the label\r\n     * @param {Array} children - Children assigned to the node\r\n     */\r\n    constructor(tag, props = {}, children = []) {\r\n        this.tag = tag;\r\n        this.props = {\r\n            ...props,\r\n            children\r\n        };\r\n    }\r\n    /**\r\n     * Clone the current node by keeping props and children by default\r\n     * @param {Function|String} tag -  Node component or label\r\n     * @param {*} props - Properties of the label\r\n     * @param {*} children - Children assigned to the node\r\n     */\r\n    clone(tag = this.tag, props = this.props, children = this.props.children) {\r\n        return new VDom(tag, props, children);\r\n    }\r\n    /**\r\n     * Dispatch an existing function in `this.props`\r\n     * @param {String} prop - Property to emit the virtual node only if it exists as a function\r\n     * @param  {...any} args - Arguments to be issued to the function\r\n     */\r\n    emit(prop, ...args) {\r\n        if (this.prevent) return;\r\n        if (prop === \"remove\") this.prevent = true;\r\n        if (typeof this.props[prop] === \"function\") this.props[prop](...args);\r\n    }\r\n}\r\n/**\r\n * Prepare the virtual node\r\n * @param {Function|String} tag\r\n * @param {Object} props\r\n * @param  {...any} children\r\n * @return {VDom}\r\n */\r\nexport function h(tag, props, ...children) {\r\n    return new VDom(tag || \"\", props, concat(children));\r\n}\r\n/**\r\n * Clean existing values in virtual-dom tree\r\n * @param {*} children\r\n * @param {*} merge\r\n */\r\nexport function concat(children, next = []) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        let value = children[i];\r\n        Array.isArray(value) ? concat(value, next) : next.push(value);\r\n    }\r\n    return next;\r\n}\r\n","export function create(tag, isSvg) {\r\n    return isSvg\r\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        : tag\r\n        ? document.createElement(tag)\r\n        : document.createTextNode(\"\");\r\n}\r\n\r\nexport function root(parent) {\r\n    return parent.shadowRoot || parent;\r\n}\r\nexport function remove(parent, child) {\r\n    parent.removeChild(child);\r\n}\r\n\r\nexport function append(parent, child) {\r\n    parent.appendChild(child);\r\n}\r\n\r\nexport function replace(parent, newChild, oldChild) {\r\n    parent.replaceChild(newChild, oldChild);\r\n}\r\n","import { VDom } from \"./vdom\";\r\nimport { create, remove, append, replace, root } from \"./dom\";\r\nexport { h } from \"./vdom\";\r\n\r\nlet attachShadow = \"attachShadow\";\r\n\r\nexport let options = {\r\n    delay: 1\r\n};\r\nexport let COMPONENTS = \"__components__\";\r\n/**\r\n * Master is the mark to store the previous state\r\n * and if the node is controlled by one or more components\r\n */\r\nexport let PREVIOUS = \"__previous__\";\r\n/**\r\n * Each time a component is removed from the dom,\r\n * the property is marked as true\r\n */\r\nexport let REMOVE = \"__remove__\";\r\n\r\nexport let LISTENERS = \"__listeners__\";\r\n/**\r\n * Special properties of virtual dom,\r\n * these are ignored from the diffProps process,\r\n * since it is part of the component's life cycle\r\n */\r\n\r\nexport let IGNORE = /^(context|state|children|(create|update|remove)(d){0,1}|)$/;\r\n/**\r\n * It allows to print the status of virtual dom on the planned configuration\r\n * @param {VDom} next - the next state of the node\r\n * @param {HTMLElement} parent - the container of the node\r\n * @param {HTMLElement} [child]  - the ancestor of the node\r\n * @param {Object} [context] - the context of the node\r\n * @param {boolean} [isSvg] - check if the node belongs to a svg unit, to control it as such\r\n * @returns {HTMLElement} - The current node\r\n */\r\nexport function render(next, parent, child, context, isSvg) {\r\n    return diff(root(parent), child, next, context, isSvg);\r\n}\r\n\r\nexport function defer(handler) {\r\n    setTimeout(handler, options.delay);\r\n}\r\n/**\r\n *\r\n * @param {Function} component  - Function that controls the node\r\n * @param {*} [currentState] - The initial state of the component\r\n * @param {Boolean} [isSvg] - Create components for a group of svg\r\n * @return {HTMLElement} - Returns the current component node\r\n */\r\nexport function Component(tag, state, isSvg, deep, key, components) {\r\n    this.tag = tag;\r\n    this.state = state;\r\n    this.context = {};\r\n    this.prevent = false;\r\n    this.render = (parent, base) => {\r\n        let set = state => {\r\n                this.state = state;\r\n                if (!base[REMOVE] && !this.prevent) {\r\n                    this.prevent = true;\r\n                    defer(() => {\r\n                        this.render(parent, base);\r\n                        this.prevent = false;\r\n                    });\r\n                }\r\n            },\r\n            get = () => this.state;\r\n        return (base = diff(\r\n            parent,\r\n            base,\r\n            this.tag(this.props, { set, get }, this.context),\r\n            this.context,\r\n            isSvg,\r\n            deep + 1,\r\n            key + 1,\r\n            components\r\n        ));\r\n    };\r\n}\r\n/**\r\n * It allows to print the status of virtual dom on the planned configuration\r\n * @param {HTMLElement} parent - the container of the node\r\n * @param {HTMLElement} [node]  - the ancestor of the node\r\n * @param {VDom} next - the next state of the node\r\n * @param {Object} [context] - the context of the node\r\n * @param {boolean} [isSvg] - check if the node belongs to a svg unit, to control it as such\r\n * @returns {HTMLElement} - The current node\r\n */\r\n\r\nexport function diff(\r\n    parent,\r\n    node,\r\n    next,\r\n    context = {},\r\n    isSvg,\r\n    deep = 0,\r\n    currentKey = 0,\r\n    currentComponents = {}\r\n) {\r\n    let prev = (node && node[PREVIOUS]) || new VDom(),\r\n        components = (node && node[COMPONENTS]) || currentComponents,\r\n        base = node,\r\n        isCreate,\r\n        component;\r\n\r\n    if (prev === next) return base;\r\n\r\n    if (!(next instanceof VDom)) {\r\n        next = new VDom(\"\", {}, next);\r\n    }\r\n\r\n    let children = next.props.children,\r\n        addContext = next.props.context;\r\n\r\n    context = addContext ? { ...context, ...addContext } : context;\r\n\r\n    isSvg = next.tag === \"svg\" || isSvg;\r\n\r\n    if (components[currentKey] && components[currentKey].tag !== next.tag) {\r\n        delete components[currentKey];\r\n    }\r\n\r\n    if (typeof next.tag === \"function\") {\r\n        if ((components[currentKey] || {}).tag !== next.tag) {\r\n            components[currentKey] = new Component(\r\n                next.tag,\r\n                next.props.state,\r\n                isSvg,\r\n                deep,\r\n                currentKey,\r\n                components\r\n            );\r\n        }\r\n        component = components[currentKey];\r\n        next = next.clone(prev.tag || (isSvg ? \"g\" : \"\"));\r\n    }\r\n\r\n    if (prev.tag !== next.tag) {\r\n        base = create(next.tag, isSvg);\r\n        if (node) {\r\n            if (!component && next.tag) {\r\n                let length = children.length;\r\n                while (node.firstChild) {\r\n                    if (!length--) break;\r\n                    append(base, node.firstChild);\r\n                }\r\n            }\r\n            replace(parent, base, node);\r\n            if (!component && prev.tag) emitRemove(node);\r\n        } else {\r\n            append(parent, base);\r\n        }\r\n        isCreate = true;\r\n        next.emit(\"create\", base);\r\n    }\r\n\r\n    if (component) {\r\n        component.props = next.props;\r\n        component.context = context;\r\n        if (deep && component.prevent) {\r\n            return base;\r\n        }\r\n        return component.render(parent, base);\r\n    } else if (next.tag) {\r\n        if (\r\n            isCreate ||\r\n            next.emit(\"update\", base, prev.props, next.props) !== false\r\n        ) {\r\n            diffProps(\r\n                base,\r\n                prev.tag === next.tag ? prev.props : {},\r\n                next.props,\r\n                isSvg\r\n            );\r\n            let nextParent = next.props[attachShadow] ? root(base) : base,\r\n                childNodes = nextParent.childNodes,\r\n                move = 0,\r\n                length = Math.max(children.length, childNodes.length);\r\n            for (let i = 0; i < length; i++) {\r\n                let childI = i - move;\r\n                if (i in children) {\r\n                    diff(nextParent, childNodes[childI], children[i], isSvg);\r\n                } else {\r\n                    remove(nextParent, childNodes[childI]);\r\n                    move++;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        if (prev.props.children !== next.props.children) {\r\n            base.textContent = next.props.children;\r\n        }\r\n    }\r\n\r\n    base[PREVIOUS] = next;\r\n    base[COMPONENTS] = components;\r\n\r\n    next.emit(isCreate ? \"created\" : \"updated\", base);\r\n\r\n    return base;\r\n}\r\n/**\r\n * Update or delete the attributes and events of a node\r\n * @param {HTMLElement} node - Node to assign changes\r\n * @param {Object} prev - Previous status of attributes\r\n * @param {Object} next - next status of attributes\r\n * @param {Boolean} [isSvg] - If it belongs to svg tree\r\n */\r\nexport function diffProps(node, prev, next, isSvg) {\r\n    let prevKeys = Object.keys(prev),\r\n        nextKeys = Object.keys(next),\r\n        keys = prevKeys.concat(nextKeys),\r\n        define = {};\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let prop = keys[i];\r\n\r\n        if (define[prop] || prev[prop] === next[prop] || IGNORE.test(prop))\r\n            continue;\r\n\r\n        define[prop] = true;\r\n\r\n        if (attachShadow === prop && attachShadow in node) {\r\n            node.attachShadow({ mode: next[prop] ? \"open\" : \"closed\" });\r\n        }\r\n        let isFnPrev = typeof prev[prop] === \"function\",\r\n            isFnNext = typeof next[prop] === \"function\";\r\n\r\n        if (isFnPrev || isFnNext) {\r\n            if (!isFnNext && isFnPrev) {\r\n                node.removeEventListener(prop, node[LISTENERS][prop][0]);\r\n            }\r\n            if (isFnNext) {\r\n                if (!isFnPrev) {\r\n                    node[LISTENERS] = node[LISTENERS] || {};\r\n                    if (!node[LISTENERS][prop]) {\r\n                        node[LISTENERS][prop] = [\r\n                            event => {\r\n                                node[LISTENERS][prop][1](event);\r\n                            }\r\n                        ];\r\n                    }\r\n                    node.addEventListener(prop, node[LISTENERS][prop][0]);\r\n                }\r\n                node[LISTENERS][prop][1] = next[prop];\r\n            }\r\n        } else if (prop in next) {\r\n            if ((prop in node && !isSvg) || (isSvg && prop === \"style\")) {\r\n                if (prop === \"style\") {\r\n                    if (typeof next[prop] === \"object\") {\r\n                        let prevStyle = prev[prop] || {},\r\n                            nextStyle = next[prop];\r\n                        for (let prop in nextStyle) {\r\n                            if (prevStyle[prop] !== nextStyle[prop]) {\r\n                                if (prop[0] === \"-\") {\r\n                                    node.style.setProperty(\r\n                                        prop,\r\n                                        nextStyle[prop]\r\n                                    );\r\n                                } else {\r\n                                    node.style[prop] = nextStyle[prop];\r\n                                }\r\n                            }\r\n                        }\r\n                        // next[prop] = { ...prevStyle, ...nextStyle };\r\n                    } else {\r\n                        node.style.cssText = next[prop];\r\n                    }\r\n                } else {\r\n                    node[prop] = next[prop];\r\n                }\r\n            } else {\r\n                isSvg\r\n                    ? node.setAttributeNS(null, prop, next[prop])\r\n                    : node.setAttribute(prop, next[prop]);\r\n            }\r\n        } else {\r\n            node.removeAttribute(prop);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Issues the deletion of node and its children\r\n * @param {HTMLElement} base\r\n */\r\nexport function emitRemove(base) {\r\n    let { prev = new VDom() } = (base && base[MASTER]) || {},\r\n        children = base.childNodes;\r\n    base[REMOVE] = true;\r\n    prev.emit(\"remove\", base);\r\n    for (let i = 0; i < children.length; i++) {\r\n        emitRemove(children[i]);\r\n    }\r\n    prev.emit(\"removed\", base);\r\n}\r\n"],"names":["VDom","tag","props","children","this","Object","h","concat","next","let","i","length","value","Array","isArray","push","root","parent","shadowRoot","remove","child","removeChild","append","appendChild","clone","emit","prop","prevent","ref","args","attachShadow","options","delay","COMPONENTS","PREVIOUS","REMOVE","LISTENERS","IGNORE","render","context","isSvg","diff","Component","state","deep","key","components","base","setTimeout","node","currentKey","currentComponents","isCreate","component","prev","addContext","document","createElementNS","createElement","createTextNode","create","firstChild","newChild","oldChild","replaceChild","replace","emitRemove","MASTER","childNodes","prevKeys","keys","nextKeys","define","test","mode","isFnPrev","isFnNext","removeEventListener","event","addEventListener","prevStyle","nextStyle","style","setProperty","cssText","setAttributeNS","setAttribute","removeAttribute","diffProps","nextParent","move","Math","max","childI","textContent"],"mappings":"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"}