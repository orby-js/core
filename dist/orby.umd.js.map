{"version":3,"file":"orby.umd.js","sources":["../src/vdom.js","../src/dom.js","../src/diff.js"],"sourcesContent":["export class VDom {\r\n    /**\r\n     *\r\n     * @param {Function|String} tag - Node component or label\r\n     * @param {Object} props - Properties of the label\r\n     * @param {Array} children - Children assigned to the node\r\n     */\r\n    constructor(tag, props = {}, children = []) {\r\n        this.tag = tag;\r\n        this.props = {\r\n            ...props,\r\n            children\r\n        };\r\n    }\r\n    /**\r\n     * Clone the current node by keeping props and children by default\r\n     * @param {Function|String} tag -  Node component or label\r\n     * @param {*} props - Properties of the label\r\n     * @param {*} children - Children assigned to the node\r\n     */\r\n    clone(tag = this.tag, props = this.props, children = this.props.children) {\r\n        return new VDom(tag, props, children);\r\n    }\r\n    /**\r\n     * Dispatch an existing function in `this.props`\r\n     * @param {String} prop - Property to emit the virtual node only if it exists as a function\r\n     * @param  {...any} args - Arguments to be issued to the function\r\n     */\r\n    emit(prop, ...args) {\r\n        if (this.prevent) return;\r\n        if (prop === \"remove\") this.prevent = true;\r\n        if (typeof this.props[prop] === \"function\") this.props[prop](...args);\r\n    }\r\n}\r\n/**\r\n * Prepare the virtual node\r\n * @param {Function|String} tag\r\n * @param {Object} props\r\n * @param  {...any} children\r\n * @return {VDom}\r\n */\r\nexport function h(tag, props, ...children) {\r\n    return new VDom(tag || \"\", props, concat(children));\r\n}\r\n/**\r\n * Verify if this is a virtual node\r\n * @param {*} value\r\n * @return {Boolean}\r\n */\r\nexport function isVDom(value) {\r\n    return typeof value === \"object\" && value instanceof VDom;\r\n}\r\n/**\r\n * Clean existing values in virtual-dom tree\r\n * @param {*} children\r\n * @param {*} merge\r\n */\r\nexport function concat(children, merge = []) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        let child = children[i];\r\n        Array.isArray(child)\r\n            ? concat(child, merge)\r\n            : merge.push(\r\n                  isVDom(child) ? child : new VDom(\"\", {}, [child || \"\"])\r\n              );\r\n    }\r\n    return merge;\r\n}\r\n","export function create(tag, isSvg) {\r\n    return isSvg\r\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        : tag\r\n            ? document.createElement(tag)\r\n            : document.createTextNode(\"\");\r\n}\r\n\r\nexport function root(parent) {\r\n    return parent.shadowRoot || parent;\r\n}\r\nexport function remove(parent, child) {\r\n    root(parent).removeChild(child);\r\n}\r\n\r\nexport function append(parent, child) {\r\n    root(parent).appendChild(child);\r\n}\r\n\r\nexport function replace(parent, newChild, oldChild) {\r\n    root(parent).replaceChild(newChild, oldChild);\r\n}\r\n","import { VDom, isVDom } from \"./vdom\";\r\nimport { create, remove, append, replace, root } from \"./dom\";\r\nexport { h, isVDom } from \"./vdom\";\r\n\r\nexport const FPS = 1000 / 120;\r\n/**\r\n * Master is the mark to store the previous state\r\n * and if the node is controlled by one or more components\r\n */\r\nexport const MASTER = \"__master__\";\r\n/**\r\n * Each time a component is removed from the dom,\r\n * the property is marked as true\r\n */\r\nexport const REMOVE = \"__remove__\";\r\n\r\nexport const LISTENER = \"__listeners__\";\r\n/**\r\n * Special properties of virtual dom,\r\n * these are ignored from the diffProps process,\r\n * since it is part of the component's life cycle\r\n */\r\nexport const IGNORE = [\"children\", \"create\", \"remove\", \"context\", \"state\"];\r\n/**\r\n * It allows to print the status of virtual dom on the planned configuration\r\n * @param {VDom} next - the next state of the node\r\n * @param {HTMLElement} parent - the container of the node\r\n * @param {HTMLElement} [child]  - the ancestor of the node\r\n * @param {Object} [context] - the context of the node\r\n * @param {boolean} [isSvg] - check if the node belongs to a svg unit, to control it as such\r\n * @returns {HTMLElement} - The current node\r\n */\r\nexport function render(next, parent, child, context, isSvg) {\r\n    return diff(parent, child, next, context, isSvg);\r\n}\r\n/**\r\n * Gets the node's status mark\r\n * @param {HTMLElement} [base]\r\n * @return {object} - returns an object since the property associated\r\n *                    with the master in the whole diff is decomposed\r\n */\r\nexport function getMaster(base) {\r\n    return (base && base[MASTER]) || {};\r\n}\r\n\r\nexport function defer(handler, time = FPS) {\r\n    setTimeout(handler, FPS);\r\n}\r\n/**\r\n *\r\n * @param {Function} component  - Function that controls the node\r\n * @param {*} [currentState] - The initial state of the component\r\n * @param {Boolean} [isSvg] - Create components for a group of svg\r\n * @return {HTMLElement} - Returns the current component node\r\n */\r\nexport function createComponent(tag, currentState, isSvg, key, components) {\r\n    let prevent;\r\n    function render(parent, base, props, context) {\r\n        let inRender = true;\r\n        let set = nextState => {\r\n                currentState = nextState;\r\n                if (!base[REMOVE] && !prevent && !inRender) {\r\n                    prevent = true;\r\n                    defer(() => {\r\n                        render(parent, base, props, context);\r\n                        prevent = false;\r\n                    });\r\n                }\r\n            },\r\n            get = () => currentState;\r\n        base = diff(\r\n            parent,\r\n            base,\r\n            tag(props, { set, get }, context),\r\n            context,\r\n            isSvg,\r\n            key + 1,\r\n            components\r\n        );\r\n        inRender = false;\r\n        return base;\r\n    }\r\n    return {\r\n        tag,\r\n        render\r\n    };\r\n}\r\n/**\r\n * It allows to print the status of virtual dom on the planned configuration\r\n * @param {HTMLElement} parent - the container of the node\r\n * @param {HTMLElement} [node]  - the ancestor of the node\r\n * @param {VDom} next - the next state of the node\r\n * @param {Object} [context] - the context of the node\r\n * @param {boolean} [isSvg] - check if the node belongs to a svg unit, to control it as such\r\n * @returns {HTMLElement} - The current node\r\n */\r\n\r\nexport function diff(\r\n    parent,\r\n    node,\r\n    next,\r\n    context = {},\r\n    isSvg,\r\n    currentKey = 0,\r\n    currentComponents = {}\r\n) {\r\n    next = isVDom(next) ? next : new VDom(\"\", {}, [next || \"\"]);\r\n\r\n    let base = node,\r\n        { prev = new VDom(), components = currentComponents } = getMaster(base),\r\n        component,\r\n        isCreate,\r\n        addContext = next.props.context;\r\n\r\n    context = addContext ? { ...context, ...addContext } : context;\r\n\r\n    isSvg = next.tag === \"svg\" || isSvg;\r\n\r\n    if (prev === next) return base;\r\n\r\n    if (components[currentKey] && components[currentKey].tag !== next.tag) {\r\n        delete components[currentKey];\r\n    }\r\n\r\n    if (typeof next.tag === \"function\") {\r\n        if ((components[currentKey] || {}).tag !== next.tag) {\r\n            components[currentKey] = createComponent(\r\n                next.tag,\r\n                next.props.state,\r\n                isSvg,\r\n                currentKey,\r\n                components\r\n            );\r\n        }\r\n        component = components[currentKey];\r\n        next = next.clone(prev.tag || (isSvg ? \"g\" : \"\"));\r\n    }\r\n\r\n    let children = next.props.children;\r\n\r\n    if (next.tag !== prev.tag) {\r\n        base = create(next.tag, isSvg);\r\n        if (node) {\r\n            if (!component && next.tag !== \"\") {\r\n                let length = children.length;\r\n                while (node.firstChild) {\r\n                    if (!length--) break;\r\n                    append(base, node.firstChild);\r\n                }\r\n            }\r\n            replace(parent, base, node);\r\n            emitRemove(node);\r\n        } else {\r\n            append(parent, base);\r\n        }\r\n        isCreate = true;\r\n        next.emit(\"create\", base);\r\n    }\r\n    if (component) {\r\n        return component.render(parent, base, next.props, context);\r\n    } else if (!next.tag) {\r\n        if (prev.props.children[0] !== next.props.children[0]) {\r\n            base.textContent = String(next.props.children[0]);\r\n        }\r\n    } else {\r\n        if (\r\n            isCreate ||\r\n            next.emit(\"update\", base, prev.props, next.props) !== false\r\n        ) {\r\n            diffProps(base, prev.props, next.props, isSvg);\r\n            let childNodes = Array.from(root(base).childNodes),\r\n                length = Math.max(childNodes.length, children.length);\r\n            for (let i = 0; i < length; i++) {\r\n                if (children[i]) {\r\n                    diff(base, childNodes[i], children[i], context, isSvg);\r\n                } else {\r\n                    if (childNodes[i]) {\r\n                        emitRemove(childNodes[i]);\r\n                        remove(base, childNodes[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    base[MASTER] = {\r\n        prev: next,\r\n        components\r\n    };\r\n\r\n    next.emit(isCreate ? \"created\" : \"updated\", base);\r\n\r\n    return base;\r\n}\r\n/**\r\n * Update or delete the attributes and events of a node\r\n * @param {HTMLElement} node - Node to assign changes\r\n * @param {Object} prev - Previous status of attributes\r\n * @param {Object} next - next status of attributes\r\n * @param {Boolean} [isSvg] - If it belongs to svg tree\r\n */\r\nexport function diffProps(node, prev, next, isSvg) {\r\n    let prevKeys = Object.keys(prev),\r\n        nextKeys = Object.keys(next).filter(\r\n            key => prevKeys.indexOf(key) === -1\r\n        ),\r\n        keys = prevKeys.concat(nextKeys);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let prop = keys[i];\r\n\r\n        if (prev[prop] === next[prop] || IGNORE.indexOf(prop) > -1) continue;\r\n\r\n        let isFnPrev = typeof prev[prop] === \"function\",\r\n            isFnNext = typeof next[prop] === \"function\";\r\n        if (isFnPrev || isFnNext) {\r\n            if (!isFnNext && isFnPrev) {\r\n                node.removeEventListener(prop, node[LISTENER][prop][0]);\r\n            }\r\n            if (isFnNext) {\r\n                if (!isFnPrev) {\r\n                    node[LISTENER] = node[LISTENER] || {};\r\n                    if (!node[LISTENER][prop]) {\r\n                        node[LISTENER][prop] = [\r\n                            event => {\r\n                                node[LISTENER][prop][1](event);\r\n                            }\r\n                        ];\r\n                    }\r\n                    node.addEventListener(prop, node[LISTENER][prop][0]);\r\n                }\r\n                node[LISTENER][prop][1] = next[prop];\r\n            }\r\n        } else if (prop in next) {\r\n            if ((prop in node && !isSvg) || (isSvg && prop === \"style\")) {\r\n                if (prop === \"style\") {\r\n                    if (typeof next[prop] === \"object\") {\r\n                        let prevStyle = prev[prop] || {},\r\n                            nextStyle = next[prop];\r\n                        for (let prop in nextStyle) {\r\n                            if (prevStyle[prop] !== nextStyle[prop]) {\r\n                                if (prop[0] === \"-\") {\r\n                                    node.setProperty(prop, nextStyle[prop]);\r\n                                } else {\r\n                                    node.style[prop] = nextStyle[prop];\r\n                                }\r\n                            }\r\n                        }\r\n                        next[prop] = { ...prevStyle, ...nextStyle };\r\n                    } else {\r\n                        node.style.cssText = next[prop];\r\n                    }\r\n                } else {\r\n                    node[prop] = next[prop];\r\n                }\r\n            } else {\r\n                isSvg\r\n                    ? node.setAttributeNS(null, prop, next[prop])\r\n                    : node.setAttribute(prop, next[prop]);\r\n            }\r\n        } else {\r\n            node.removeAttribute(prop);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Issues the deletion of node and its children\r\n * @param {HTMLElement} base\r\n */\r\nexport function emitRemove(base) {\r\n    let { prev = new VDom() } = getMaster(base),\r\n        children = base.childNodes;\r\n    base[REMOVE] = true;\r\n    prev.emit(\"remove\", base);\r\n    for (let i = 0; i < children.length; i++) {\r\n        emitRemove(children[i]);\r\n    }\r\n    prev.emit(\"removed\", base);\r\n}\r\n"],"names":["VDom","constructor","tag","props","children","clone","this","emit","prop","args","prevent","isVDom","value","root","parent","shadowRoot","remove","child","removeChild","append","appendChild","FPS","MASTER","REMOVE","LISTENER","IGNORE","getMaster","base","createComponent","currentState","isSvg","key","components","render","context","inRender","diff","set","nextState","handler","time","setTimeout","defer","get","node","next","currentKey","currentComponents","component","isCreate","prev","addContext","state","document","createElementNS","createElement","createTextNode","create","length","firstChild","newChild","oldChild","replaceChild","replace","emitRemove","prevKeys","Object","keys","nextKeys","filter","indexOf","concat","i","isFnPrev","isFnNext","removeEventListener","event","addEventListener","prevStyle","nextStyle","setProperty","style","cssText","setAttributeNS","setAttribute","removeAttribute","diffProps","childNodes","Array","from","Math","max","textContent","String","merge","isArray","push"],"mappings":"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"}