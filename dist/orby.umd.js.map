{"version":3,"file":"orby.umd.js","sources":["../src/vdom.js","../src/dom.js","../src/diff.js"],"sourcesContent":["export class VDom {\r\n    /**\r\n     *\r\n     * @param {Function|String} tag - Node component or label\r\n     * @param {Object} props - Properties of the label\r\n     * @param {Array} children - Children assigned to the node\r\n     */\r\n    constructor(tag, props = {}, children = []) {\r\n        this.tag = tag;\r\n        this.props = {\r\n            ...props,\r\n            children\r\n        };\r\n    }\r\n    /**\r\n     * Clone the current node by keeping props and children by default\r\n     * @param {Function|String} tag -  Node component or label\r\n     * @param {*} props - Properties of the label\r\n     * @param {*} children - Children assigned to the node\r\n     */\r\n    clone(tag = this.tag, props = this.props, children = this.props.children) {\r\n        return new VDom(tag, props, children);\r\n    }\r\n    /**\r\n     * Dispatch an existing function in `this.props`\r\n     * @param {String} prop - Property to emit the virtual node only if it exists as a function\r\n     * @param  {...any} args - Arguments to be issued to the function\r\n     */\r\n    emit(prop, ...args) {\r\n        if (this.prevent) return;\r\n        if (prop === \"remove\") this.prevent = true;\r\n        if (typeof this.props[prop] === \"function\") this.props[prop](...args);\r\n    }\r\n}\r\n/**\r\n * Prepare the virtual node\r\n * @param {Function|String} tag\r\n * @param {Object} props\r\n * @param  {...any} children\r\n * @return {VDom}\r\n */\r\nexport function h(tag, props, ...children) {\r\n    return new VDom(tag || \"\", props, concat(children));\r\n}\r\n/**\r\n * Clean existing values in virtual-dom tree\r\n * @param {*} children\r\n * @param {*} merge\r\n */\r\nexport function concat(children, next = []) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        let value = children[i];\r\n        Array.isArray(value) ? concat(value, next) : next.push(value);\r\n    }\r\n    return next;\r\n}\r\n","export function create(tag, isSvg) {\r\n    return isSvg\r\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        : tag\r\n        ? document.createElement(tag)\r\n        : document.createTextNode(\"\");\r\n}\r\n\r\nexport function root(parent) {\r\n    return parent.shadowRoot || parent;\r\n}\r\nexport function remove(parent, child) {\r\n    parent.removeChild(child);\r\n}\r\n\r\nexport function append(parent, child) {\r\n    parent.appendChild(child);\r\n}\r\n\r\nexport function replace(parent, newChild, oldChild) {\r\n    parent.replaceChild(newChild, oldChild);\r\n}\r\n","import { VDom } from \"./vdom\";\r\nimport { create, remove, append, replace, root } from \"./dom\";\r\nexport { h } from \"./vdom\";\r\n\r\nexport let options = {\r\n    delay: 1\r\n};\r\n\r\nexport let COMPONENTS = \"__components__\";\r\n/**\r\n * Master is the mark to store the previous state\r\n * and if the node is controlled by one or more components\r\n */\r\nexport let PREVIOUS = \"__previous__\";\r\n/**\r\n * Each time a component is removed from the dom,\r\n * the property is marked as true\r\n */\r\nexport let REMOVE = \"__remove__\";\r\n\r\nexport let LISTENERS = \"__listeners__\";\r\n/**\r\n * Special properties of virtual dom,\r\n * these are ignored from the diffProps process,\r\n * since it is part of the component's life cycle\r\n */\r\n\r\nexport let IGNORE = /^(context|state|children|(create|update|remove)(d){0,1}|xmlns)$/;\r\n/**\r\n * It allows to print the status of virtual dom on the planned configuration\r\n * @param {VDom} next - the next state of the node\r\n * @param {HTMLElement} parent - the container of the node\r\n * @param {HTMLElement} [child]  - the ancestor of the node\r\n * @param {Object} [context] - the context of the node\r\n * @param {boolean} [isSvg] - check if the node belongs to a svg unit, to control it as such\r\n * @returns {HTMLElement} - The current node\r\n */\r\nexport function render(next, parent, child, context, isSvg) {\r\n    return diff(root(parent), child, next, context, isSvg);\r\n}\r\n\r\nexport function defer(handler) {\r\n    setTimeout(handler, options.delay);\r\n}\r\n/**\r\n *\r\n * @param {Function} component  - Function that controls the node\r\n * @param {*} [currentState] - The initial state of the component\r\n * @param {Boolean} [isSvg] - Create components for a group of svg\r\n * @return {HTMLElement} - Returns the current component node\r\n */\r\nexport function Component(tag, state, isSvg, deep, key, components) {\r\n    this.tag = tag;\r\n    this.state = state;\r\n    this.context = {};\r\n    this.prevent = false;\r\n    this.render = (parent, base) => {\r\n        let set = state => {\r\n                this.state = state;\r\n                if (!base[REMOVE] && !this.prevent) {\r\n                    this.prevent = true;\r\n                    defer(() => {\r\n                        this.render(parent, base);\r\n                        this.prevent = false;\r\n                    });\r\n                }\r\n            },\r\n            get = () => this.state;\r\n        return (base = diff(\r\n            parent,\r\n            base,\r\n            this.tag(this.props, { set, get }, this.context),\r\n            this.context,\r\n            isSvg,\r\n            deep + 1,\r\n            key + 1,\r\n            components\r\n        ));\r\n    };\r\n}\r\n/**\r\n * It allows to print the status of virtual dom on the planned configuration\r\n * @param {HTMLElement} parent - the container of the node\r\n * @param {HTMLElement} [node]  - the ancestor of the node\r\n * @param {VDom} next - the next state of the node\r\n * @param {Object} [context] - the context of the node\r\n * @param {boolean} [isSvg] - check if the node belongs to a svg unit, to control it as such\r\n * @returns {HTMLElement} - The current node\r\n */\r\n\r\nexport function diff(\r\n    parent,\r\n    node,\r\n    next,\r\n    context = {},\r\n    isSvg,\r\n    deep = 0,\r\n    currentKey = 0,\r\n    currentComponents = {}\r\n) {\r\n    let prev = (node && node[PREVIOUS]) || new VDom(),\r\n        components = (node && node[COMPONENTS]) || currentComponents,\r\n        base = node,\r\n        isCreate,\r\n        component;\r\n\r\n    if (prev === next) return base;\r\n\r\n    if (!(next instanceof VDom)) {\r\n        next = new VDom(\"\", {}, next);\r\n    }\r\n\r\n    let children = next.props.children,\r\n        addContext = next.props.context;\r\n\r\n    context = addContext ? { ...context, ...addContext } : context;\r\n\r\n    isSvg = next.tag === \"svg\" || isSvg;\r\n\r\n    if (components[currentKey] && components[currentKey].tag !== next.tag) {\r\n        delete components[currentKey];\r\n    }\r\n\r\n    if (typeof next.tag === \"function\") {\r\n        if ((components[currentKey] || {}).tag !== next.tag) {\r\n            components[currentKey] = new Component(\r\n                next.tag,\r\n                next.props.state,\r\n                isSvg,\r\n                deep,\r\n                currentKey,\r\n                components\r\n            );\r\n        }\r\n        component = components[currentKey];\r\n        next = next.clone(prev.tag || (isSvg ? \"g\" : \"\"));\r\n    }\r\n\r\n    if (prev.tag !== next.tag) {\r\n        base = create(next.tag, isSvg);\r\n        if (node) {\r\n            if (!component && next.tag) {\r\n                let length = children.length;\r\n                while (node.firstChild) {\r\n                    if (!length--) break;\r\n                    append(base, node.firstChild);\r\n                }\r\n            }\r\n            replace(parent, base, node);\r\n            if (!component && prev.tag) emitRemove(node);\r\n        } else {\r\n            append(parent, base);\r\n        }\r\n        isCreate = true;\r\n        next.emit(\"create\", base);\r\n    }\r\n\r\n    if (component) {\r\n        component.props = next.props;\r\n        component.context = context;\r\n        if (deep && component.prevent) {\r\n            return base;\r\n        }\r\n        return component.render(parent, base);\r\n    } else if (next.tag) {\r\n        if (\r\n            isCreate ||\r\n            next.emit(\"update\", base, prev.props, next.props) !== false\r\n        ) {\r\n            diffProps(\r\n                base,\r\n                prev.tag === next.tag ? prev.props : {},\r\n                next.props,\r\n                isSvg\r\n            );\r\n            let nextParent = next.props.scoped ? root(base) : base,\r\n                childNodes = nextParent.childNodes,\r\n                move = 0,\r\n                length = Math.max(children.length, childNodes.length);\r\n            for (let i = 0; i < length; i++) {\r\n                let childI = i - move;\r\n                if (i in children) {\r\n                    diff(nextParent, childNodes[childI], children[i], isSvg);\r\n                } else {\r\n                    remove(nextParent, childNodes[childI]);\r\n                    move++;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        if (prev.props.children !== next.props.children) {\r\n            base.textContent = next.props.children;\r\n        }\r\n    }\r\n\r\n    base[PREVIOUS] = next;\r\n    base[COMPONENTS] = components;\r\n\r\n    next.emit(isCreate ? \"created\" : \"updated\", base);\r\n\r\n    return base;\r\n}\r\n/**\r\n * Update or delete the attributes and events of a node\r\n * @param {HTMLElement} node - Node to assign changes\r\n * @param {Object} prev - Previous status of attributes\r\n * @param {Object} next - next status of attributes\r\n * @param {Boolean} [isSvg] - If it belongs to svg tree\r\n */\r\nexport function diffProps(node, prev, next, isSvg) {\r\n    let prevKeys = Object.keys(prev),\r\n        nextKeys = Object.keys(next),\r\n        keys = prevKeys.concat(nextKeys),\r\n        define = {};\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let prop = keys[i];\r\n\r\n        if (define[prop] || prev[prop] === next[prop] || IGNORE.test(prop))\r\n            continue;\r\n\r\n        define[prop] = true;\r\n\r\n        if (\"scoped\" === prop && \"attachShadow\" in node) {\r\n            node.attachShadow({ mode: next[prop] ? \"open\" : \"closed\" });\r\n            continue;\r\n        }\r\n\r\n        let isFnPrev = typeof prev[prop] === \"function\",\r\n            isFnNext = typeof next[prop] === \"function\";\r\n\r\n        if (isFnPrev || isFnNext) {\r\n            if (!isFnNext && isFnPrev) {\r\n                node.removeEventListener(prop, node[LISTENERS][prop][0]);\r\n            }\r\n            if (isFnNext) {\r\n                if (!isFnPrev) {\r\n                    node[LISTENERS] = node[LISTENERS] || {};\r\n                    if (!node[LISTENERS][prop]) {\r\n                        node[LISTENERS][prop] = [\r\n                            event => {\r\n                                node[LISTENERS][prop][1](event);\r\n                            }\r\n                        ];\r\n                    }\r\n                    node.addEventListener(prop, node[LISTENERS][prop][0]);\r\n                }\r\n                node[LISTENERS][prop][1] = next[prop];\r\n            }\r\n        } else if (prop in next) {\r\n            if ((prop in node && !isSvg) || (isSvg && prop === \"style\")) {\r\n                if (prop === \"style\") {\r\n                    if (typeof next[prop] === \"object\") {\r\n                        let prevStyle = prev[prop] || {},\r\n                            nextStyle = next[prop];\r\n                        for (let prop in nextStyle) {\r\n                            if (prevStyle[prop] !== nextStyle[prop]) {\r\n                                if (prop[0] === \"-\") {\r\n                                    node.style.setProperty(\r\n                                        prop,\r\n                                        nextStyle[prop]\r\n                                    );\r\n                                } else {\r\n                                    node.style[prop] = nextStyle[prop];\r\n                                }\r\n                            }\r\n                        }\r\n                        // next[prop] = { ...prevStyle, ...nextStyle };\r\n                    } else {\r\n                        node.style.cssText = next[prop];\r\n                    }\r\n                } else {\r\n                    node[prop] = next[prop];\r\n                }\r\n            } else {\r\n                isSvg\r\n                    ? node.setAttributeNS(null, prop, next[prop])\r\n                    : node.setAttribute(prop, next[prop]);\r\n            }\r\n        } else {\r\n            node.removeAttribute(prop);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Issues the deletion of node and its children\r\n * @param {HTMLElement} base\r\n */\r\nexport function emitRemove(base) {\r\n    let { prev = new VDom() } = (base && base[MASTER]) || {},\r\n        children = base.childNodes;\r\n    base[REMOVE] = true;\r\n    prev.emit(\"remove\", base);\r\n    for (let i = 0; i < children.length; i++) {\r\n        emitRemove(children[i]);\r\n    }\r\n    prev.emit(\"removed\", base);\r\n}\r\n"],"names":["VDom","tag","props","children","this","Object","root","parent","shadowRoot","remove","child","removeChild","append","appendChild","clone","emit","prop","prevent","ref","args","options","delay","COMPONENTS","PREVIOUS","REMOVE","LISTENERS","IGNORE","Component","state","isSvg","deep","key","components","context","render","base","diff","setTimeout","node","next","currentKey","currentComponents","let","isCreate","component","prev","addContext","document","createElementNS","createElement","createTextNode","create","length","firstChild","newChild","oldChild","replaceChild","replace","emitRemove","MASTER","childNodes","i","prevKeys","keys","nextKeys","concat","define","test","attachShadow","mode","isFnPrev","isFnNext","removeEventListener","event","addEventListener","prevStyle","nextStyle","style","setProperty","cssText","setAttributeNS","setAttribute","removeAttribute","diffProps","nextParent","scoped","move","Math","max","childI","textContent","value","Array","isArray","push"],"mappings":"mLAAO,IAAMA,EAOT,SAAYC,EAAKC,EAAYC,kBAAJ,mBAAe,IACpCC,KAAKH,IAAMA,EACXG,KAAKF,MAAQG,iBACNH,YACHC,KCHL,SAASG,EAAKC,GACjB,OAAOA,EAAOC,YAAcD,EAEzB,SAASE,EAAOF,EAAQG,GAC3BH,EAAOI,YAAYD,GAGhB,SAASE,EAAOL,EAAQG,GAC3BH,EAAOM,YAAYH,eDInBI,eAAMb,EAAgBC,EAAoBC,yBAA9BC,KAAKH,oBAAaG,KAAKF,sBAAkBE,KAAKF,MAAMC,UACrD,IAAIH,EAAKC,EAAKC,EAAOC,gBAOhCY,cAAKC,mEACGZ,KAAKa,UACI,WAATD,IAAmBZ,KAAKa,SAAU,GACN,mBAArBb,KAAKF,MAAMc,OAAsBZ,KAAKF,OAAMc,SAAME,EAAGC,SE3B7DC,EAAU,CACjBC,MAAO,GAGAC,EAAa,iBAKbC,EAAW,eAKXC,EAAS,aAETC,EAAY,gBAOZC,EAAS,kEAwBb,SAASC,EAAU1B,EAAK2B,EAAOC,EAAOC,EAAMC,EAAKC,cACpD5B,KAAKH,IAAMA,EACXG,KAAKwB,MAAQA,EACbxB,KAAK6B,QAAU,GACf7B,KAAKa,SAAU,EACfb,KAAK8B,gBAAU3B,EAAQ4B,GAYnB,OAAQA,EAAOC,EACX7B,EACA4B,EACA/B,EAAKH,IAAIG,EAAKF,MAAO,cAdf0B,GACFxB,EAAKwB,MAAQA,EACRO,EAAKX,IAAYpB,EAAKa,UACvBb,EAAKa,SAAU,EAlB/BoB,sBAoBoBjC,EAAK8B,OAAO3B,EAAQ4B,GACpB/B,EAAKa,SAAU,GArBfG,EAAQC,+BAyBRjB,EAAKwB,QAIkBxB,EAAK6B,SACxC7B,EAAK6B,QACLJ,EACAC,EAAO,EACPC,EAAM,EACNC,IAcL,SAASI,EACZ7B,EACA+B,EACAC,EACAN,EACAJ,EACAC,EACAU,EACAC,kBAJU,mBAEH,kBACM,kBACO,IAEpBC,IAGIC,EACAC,EAJAC,EAAQP,GAAQA,EAAKf,IAAc,IAAIvB,EACvCgC,EAAcM,GAAQA,EAAKhB,IAAgBmB,EAC3CN,EAAOG,EAIX,GAAIO,IAASN,EAAM,OAAOJ,EAEpBI,aAAgBvC,IAClBuC,EAAO,IAAIvC,EAAK,GAAI,GAAIuC,IAG5BG,IAAIvC,EAAWoC,EAAKrC,MAAMC,SACtB2C,EAAaP,EAAKrC,MAAM+B,QAyB5B,GAvBAA,EAAUa,EAAazC,iBAAK4B,EAAYa,GAAeb,EAEvDJ,EAAqB,QAAbU,EAAKtC,KAAiB4B,EAE1BG,EAAWQ,IAAeR,EAAWQ,GAAYvC,MAAQsC,EAAKtC,YACvD+B,EAAWQ,GAGE,mBAAbD,EAAKtC,OACP+B,EAAWQ,IAAe,IAAIvC,MAAQsC,EAAKtC,MAC5C+B,EAAWQ,GAAc,IAAIb,EACzBY,EAAKtC,IACLsC,EAAKrC,MAAM0B,MACXC,EACAC,EACAU,EACAR,IAGRY,EAAYZ,EAAWQ,GACvBD,EAAOA,EAAKzB,MAAM+B,EAAK5C,MAAQ4B,EAAQ,IAAM,MAG7CgB,EAAK5C,MAAQsC,EAAKtC,IAAK,CAEvB,GADAkC,ED3ID,SAAgBlC,EAAK4B,GACxB,OAAOA,EACDkB,SAASC,gBAAgB,6BAA8B/C,GACvDA,EACA8C,SAASE,cAAchD,GACvB8C,SAASG,eAAe,ICsInBC,CAAOZ,EAAKtC,IAAK4B,GACpBS,EAAM,CACN,IAAKM,GAAaL,EAAKtC,IAEnB,IADAyC,IAAIU,EAASjD,EAASiD,OACfd,EAAKe,YACHD,KACLxC,EAAOuB,EAAMG,EAAKe,aD9H/B,SAAiB9C,EAAQ+C,EAAUC,GACtChD,EAAOiD,aAAaF,EAAUC,GCgItBE,CAAQlD,EAAQ4B,EAAMG,IACjBM,GAAaC,EAAK5C,KA2I5B,SAASyD,EAAWvB,GACvB,MAA6BA,GAAQA,EAAKwB,SAAY,+BAAzC,IAAI3D,OACbG,EAAWgC,EAAKyB,WACpBzB,EAAKX,IAAU,EACfqB,EAAK9B,KAAK,SAAUoB,GACpB,IAAKO,IAAImB,EAAI,EAAGA,EAAI1D,EAASiD,OAAQS,IACjCH,EAAWvD,EAAS0D,IAExBhB,EAAK9B,KAAK,UAAWoB,GAnJeuB,CAAWpB,QAEvC1B,EAAOL,EAAQ4B,GAEnBQ,GAAW,EACXJ,EAAKxB,KAAK,SAAUoB,GAGxB,GAAIS,EAGA,OAFAA,EAAU1C,MAAQqC,EAAKrC,MACvB0C,EAAUX,QAAUA,EAChBH,GAAQc,EAAU3B,QACXkB,EAEJS,EAAUV,OAAO3B,EAAQ4B,GAC7B,GAAII,EAAKtC,KACZ,GACI0C,IACsD,IAAtDJ,EAAKxB,KAAK,SAAUoB,EAAMU,EAAK3C,MAAOqC,EAAKrC,OAC7C,EAyCH,SAAmBoC,EAAMO,EAAMN,EAAMV,GAMxC,IALAa,IAAIoB,EAAWzD,OAAO0D,KAAKlB,GACvBmB,EAAW3D,OAAO0D,KAAKxB,GACvBwB,EAAOD,EAASG,OAAOD,GACvBE,EAAS,iBAGTxB,IAAI1B,EAAO+C,EAAKF,GAEhB,IAAIK,EAAOlD,IAAS6B,EAAK7B,KAAUuB,EAAKvB,KAASU,EAAOyC,KAAKnD,GAK7D,GAFAkD,EAAOlD,IAAQ,EAEX,WAAaA,GAAQ,iBAAkBsB,EACvCA,EAAK8B,aAAa,CAAEC,KAAM9B,EAAKvB,GAAQ,OAAS,eADpD,CAKA0B,IAAI4B,EAAiC,mBAAfzB,EAAK7B,GACvBuD,EAAiC,mBAAfhC,EAAKvB,GAE3B,GAAIsD,GAAYC,GACPA,GAAYD,GACbhC,EAAKkC,oBAAoBxD,EAAMsB,EAAKb,GAAWT,GAAM,IAErDuD,IACKD,IACDhC,EAAKb,GAAaa,EAAKb,IAAc,GAChCa,EAAKb,GAAWT,KACjBsB,EAAKb,GAAWT,GAAQ,UACpByD,GACInC,EAAKb,GAAWT,GAAM,GAAGyD,MAIrCnC,EAAKoC,iBAAiB1D,EAAMsB,EAAKb,GAAWT,GAAM,KAEtDsB,EAAKb,GAAWT,GAAM,GAAKuB,EAAKvB,SAEjC,GAAIA,KAAQuB,EACf,GAAKvB,KAAQsB,IAAST,GAAWA,GAAkB,UAATb,EACtC,GAAa,UAATA,EACA,GAA0B,iBAAfuB,EAAKvB,GAAoB,CAChC0B,IAAIiC,EAAY9B,EAAK7B,IAAS,GAC1B4D,EAAYrC,EAAKvB,GACrB,IAAK0B,IAAI1B,KAAQ4D,EACTD,EAAU3D,KAAU4D,EAAU5D,KACd,MAAZA,EAAK,GACLsB,EAAKuC,MAAMC,YACP9D,EACA4D,EAAU5D,IAGdsB,EAAKuC,MAAM7D,GAAQ4D,EAAU5D,SAMzCsB,EAAKuC,MAAME,QAAUxC,EAAKvB,QAG9BsB,EAAKtB,GAAQuB,EAAKvB,QAGtBa,EACMS,EAAK0C,eAAe,KAAMhE,EAAMuB,EAAKvB,IACrCsB,EAAK2C,aAAajE,EAAMuB,EAAKvB,SAGvCsB,EAAK4C,gBAAgBlE,KAjEpB6C,EAAI,EAAGA,EAAIE,EAAKX,OAAQS,SA9CzBsB,CACIhD,EACAU,EAAK5C,MAAQsC,EAAKtC,IAAM4C,EAAK3C,MAAQ,GACrCqC,EAAKrC,MACL2B,GAMJ,IAJAa,IAAI0C,EAAa7C,EAAKrC,MAAMmF,OAAS/E,EAAK6B,GAAQA,EAC9CyB,EAAawB,EAAWxB,WACxB0B,EAAO,EACPlC,EAASmC,KAAKC,IAAIrF,EAASiD,OAAQQ,EAAWR,QACzCS,EAAI,EAAGA,EAAIT,EAAQS,IAAK,CAC7BnB,IAAI+C,EAAS5B,EAAIyB,EACbzB,KAAK1D,EACLiC,EAAKgD,EAAYxB,EAAW6B,GAAStF,EAAS0D,GAAIhC,IAElDpB,EAAO2E,EAAYxB,EAAW6B,IAC9BH,YAKRzC,EAAK3C,MAAMC,WAAaoC,EAAKrC,MAAMC,WACnCgC,EAAKuD,YAAcnD,EAAKrC,MAAMC,UAStC,OALAgC,EAAKZ,GAAYgB,EACjBJ,EAAKb,GAAcU,EAEnBO,EAAKxB,KAAK4B,EAAW,UAAY,UAAWR,GAErCA,WAnKJ,SAAgBI,EAAMhC,EAAQG,EAAOuB,EAASJ,GACjD,OAAOO,EAAK9B,EAAKC,GAASG,EAAO6B,EAAMN,EAASJ,QFG7C,SAAW5B,EAAKC,iEACnB,OAAO,IAAIF,EAAKC,GAAO,GAAIC,EAOxB,SAAS+D,EAAO9D,EAAUoC,kBAAO,IACpC,IAAKG,IAAImB,EAAI,EAAGA,EAAI1D,EAASiD,OAAQS,IAAK,CACtCnB,IAAIiD,EAAQxF,EAAS0D,GACrB+B,MAAMC,QAAQF,GAAS1B,EAAO0B,EAAOpD,GAAQA,EAAKuD,KAAKH,GAE3D,OAAOpD,EAZ2B0B,CAAO9D"}