{"version":3,"file":"orby.js","sources":["../src/vdom.js","../src/dom.js","../src/diff.js"],"sourcesContent":["export class VDom {\r\n    /**\r\n     *\r\n     * @param {Function|String} tag - Node component or label\r\n     * @param {Object} props - Properties of the label\r\n     * @param {Array} children - Children assigned to the node\r\n     */\r\n    constructor(tag, props = {}, children = []) {\r\n        this.tag = tag;\r\n        this.props = {\r\n            ...props,\r\n            children\r\n        };\r\n    }\r\n    /**\r\n     * Clone the current node by keeping props and children by default\r\n     * @param {Function|String} tag -  Node component or label\r\n     * @param {*} props - Properties of the label\r\n     * @param {*} children - Children assigned to the node\r\n     */\r\n    clone(tag = this.tag, props = this.props, children = this.props.children) {\r\n        return new VDom(tag, props, children);\r\n    }\r\n    /**\r\n     * Dispatch an existing function in `this.props`\r\n     * @param {String} prop - Property to emit the virtual node only if it exists as a function\r\n     * @param  {...any} args - Arguments to be issued to the function\r\n     */\r\n    emit(prop, ...args) {\r\n        if (this.prevent) return;\r\n        if (prop === \"remove\") this.prevent = true;\r\n        if (typeof this.props[prop] === \"function\") this.props[prop](...args);\r\n    }\r\n}\r\n/**\r\n * Prepare the virtual node\r\n * @param {Function|String} tag\r\n * @param {Object} props\r\n * @param  {...any} children\r\n * @return {VDom}\r\n */\r\nexport function h(tag, props, ...children) {\r\n    return new VDom(tag || \"\", props, concat(children));\r\n}\r\n/**\r\n * Clean existing values in virtual-dom tree\r\n * @param {*} children\r\n * @param {*} merge\r\n */\r\nexport function concat(children, next = []) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        let value = children[i];\r\n        Array.isArray(value) ? concat(value, next) : next.push(value);\r\n    }\r\n    return next;\r\n}\r\n","export function create(tag, isSvg) {\r\n    return isSvg\r\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        : tag\r\n        ? document.createElement(tag)\r\n        : document.createTextNode(\"\");\r\n}\r\n\r\nexport function root(parent) {\r\n    return parent.shadowRoot || parent;\r\n}\r\nexport function remove(parent, child) {\r\n    parent.removeChild(child);\r\n}\r\n\r\nexport function append(parent, child) {\r\n    parent.appendChild(child);\r\n}\r\n\r\nexport function replace(parent, newChild, oldChild) {\r\n    parent.replaceChild(newChild, oldChild);\r\n}\r\n","import { VDom } from \"./vdom\";\r\nimport { create, remove, append, replace, root } from \"./dom\";\r\nexport { h } from \"./vdom\";\r\n\r\nlet attachShadow = \"attachShadow\";\r\n\r\nexport let options = {\r\n    delay: 1\r\n};\r\nexport let COMPONENTS = \"__components__\";\r\n/**\r\n * Master is the mark to store the previous state\r\n * and if the node is controlled by one or more components\r\n */\r\nexport let PREVIOUS = \"__previous__\";\r\n/**\r\n * Each time a component is removed from the dom,\r\n * the property is marked as true\r\n */\r\nexport let REMOVE = \"__remove__\";\r\n\r\nexport let LISTENERS = \"__listeners__\";\r\n/**\r\n * Special properties of virtual dom,\r\n * these are ignored from the diffProps process,\r\n * since it is part of the component's life cycle\r\n */\r\n\r\nexport let IGNORE = /^(context|state|children|(create|update|remove)(d){0,1}|)$/;\r\n/**\r\n * It allows to print the status of virtual dom on the planned configuration\r\n * @param {VDom} next - the next state of the node\r\n * @param {HTMLElement} parent - the container of the node\r\n * @param {HTMLElement} [child]  - the ancestor of the node\r\n * @param {Object} [context] - the context of the node\r\n * @param {boolean} [isSvg] - check if the node belongs to a svg unit, to control it as such\r\n * @returns {HTMLElement} - The current node\r\n */\r\nexport function render(next, parent, child, context, isSvg) {\r\n    return diff(root(parent), child, next, context, isSvg);\r\n}\r\n\r\nexport function defer(handler) {\r\n    setTimeout(handler, options.delay);\r\n}\r\n/**\r\n *\r\n * @param {Function} component  - Function that controls the node\r\n * @param {*} [currentState] - The initial state of the component\r\n * @param {Boolean} [isSvg] - Create components for a group of svg\r\n * @return {HTMLElement} - Returns the current component node\r\n */\r\nexport function Component(tag, state, isSvg, deep, key, components) {\r\n    this.tag = tag;\r\n    this.state = state;\r\n    this.context = {};\r\n    this.prevent = false;\r\n    this.render = (parent, base) => {\r\n        let set = state => {\r\n                this.state = state;\r\n                if (!base[REMOVE] && !this.prevent) {\r\n                    this.prevent = true;\r\n                    defer(() => {\r\n                        this.render(parent, base);\r\n                        this.prevent = false;\r\n                    });\r\n                }\r\n            },\r\n            get = () => this.state;\r\n        return (base = diff(\r\n            parent,\r\n            base,\r\n            this.tag(this.props, { set, get }, this.context),\r\n            this.context,\r\n            isSvg,\r\n            deep + 1,\r\n            key + 1,\r\n            components\r\n        ));\r\n    };\r\n}\r\n/**\r\n * It allows to print the status of virtual dom on the planned configuration\r\n * @param {HTMLElement} parent - the container of the node\r\n * @param {HTMLElement} [node]  - the ancestor of the node\r\n * @param {VDom} next - the next state of the node\r\n * @param {Object} [context] - the context of the node\r\n * @param {boolean} [isSvg] - check if the node belongs to a svg unit, to control it as such\r\n * @returns {HTMLElement} - The current node\r\n */\r\n\r\nexport function diff(\r\n    parent,\r\n    node,\r\n    next,\r\n    context = {},\r\n    isSvg,\r\n    deep = 0,\r\n    currentKey = 0,\r\n    currentComponents = {}\r\n) {\r\n    let prev = (node && node[PREVIOUS]) || new VDom(),\r\n        components = (node && node[COMPONENTS]) || currentComponents,\r\n        base = node,\r\n        isCreate,\r\n        component;\r\n\r\n    if (prev === next) return base;\r\n\r\n    if (!(next instanceof VDom)) {\r\n        next = new VDom(\"\", {}, next);\r\n    }\r\n\r\n    let children = next.props.children,\r\n        addContext = next.props.context;\r\n\r\n    context = addContext ? { ...context, ...addContext } : context;\r\n\r\n    isSvg = next.tag === \"svg\" || isSvg;\r\n\r\n    if (components[currentKey] && components[currentKey].tag !== next.tag) {\r\n        delete components[currentKey];\r\n    }\r\n\r\n    if (typeof next.tag === \"function\") {\r\n        if ((components[currentKey] || {}).tag !== next.tag) {\r\n            components[currentKey] = new Component(\r\n                next.tag,\r\n                next.props.state,\r\n                isSvg,\r\n                deep,\r\n                currentKey,\r\n                components\r\n            );\r\n        }\r\n        component = components[currentKey];\r\n        next = next.clone(prev.tag || (isSvg ? \"g\" : \"\"));\r\n    }\r\n\r\n    if (prev.tag !== next.tag) {\r\n        base = create(next.tag, isSvg);\r\n        if (node) {\r\n            if (!component && next.tag) {\r\n                let length = children.length;\r\n                while (node.firstChild) {\r\n                    if (!length--) break;\r\n                    append(base, node.firstChild);\r\n                }\r\n            }\r\n            replace(parent, base, node);\r\n            if (!component && prev.tag) emitRemove(node);\r\n        } else {\r\n            append(parent, base);\r\n        }\r\n        isCreate = true;\r\n        next.emit(\"create\", base);\r\n    }\r\n\r\n    if (component) {\r\n        component.props = next.props;\r\n        component.context = context;\r\n        if (deep && component.prevent) {\r\n            return base;\r\n        }\r\n        return component.render(parent, base);\r\n    } else if (next.tag) {\r\n        if (\r\n            isCreate ||\r\n            next.emit(\"update\", base, prev.props, next.props) !== false\r\n        ) {\r\n            diffProps(\r\n                base,\r\n                prev.tag === next.tag ? prev.props : {},\r\n                next.props,\r\n                isSvg\r\n            );\r\n            let nextParent = next.props[attachShadow] ? root(base) : base,\r\n                childNodes = nextParent.childNodes,\r\n                move = 0,\r\n                length = Math.max(children.length, childNodes.length);\r\n            for (let i = 0; i < length; i++) {\r\n                let childI = i - move;\r\n                if (i in children) {\r\n                    diff(nextParent, childNodes[childI], children[i], isSvg);\r\n                } else {\r\n                    remove(nextParent, childNodes[childI]);\r\n                    move++;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        if (prev.props.children !== next.props.children) {\r\n            base.textContent = next.props.children;\r\n        }\r\n    }\r\n\r\n    base[PREVIOUS] = next;\r\n    base[COMPONENTS] = components;\r\n\r\n    next.emit(isCreate ? \"created\" : \"updated\", base);\r\n\r\n    return base;\r\n}\r\n/**\r\n * Update or delete the attributes and events of a node\r\n * @param {HTMLElement} node - Node to assign changes\r\n * @param {Object} prev - Previous status of attributes\r\n * @param {Object} next - next status of attributes\r\n * @param {Boolean} [isSvg] - If it belongs to svg tree\r\n */\r\nexport function diffProps(node, prev, next, isSvg) {\r\n    let prevKeys = Object.keys(prev),\r\n        nextKeys = Object.keys(next),\r\n        keys = prevKeys.concat(nextKeys),\r\n        define = {};\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let prop = keys[i];\r\n\r\n        if (define[prop] || prev[prop] === next[prop] || IGNORE.test(prop))\r\n            continue;\r\n\r\n        define[prop] = true;\r\n\r\n        if (attachShadow === prop && attachShadow in node) {\r\n            node.attachShadow({ mode: next[prop] ? \"open\" : \"closed\" });\r\n        }\r\n        let isFnPrev = typeof prev[prop] === \"function\",\r\n            isFnNext = typeof next[prop] === \"function\";\r\n\r\n        if (isFnPrev || isFnNext) {\r\n            if (!isFnNext && isFnPrev) {\r\n                node.removeEventListener(prop, node[LISTENERS][prop][0]);\r\n            }\r\n            if (isFnNext) {\r\n                if (!isFnPrev) {\r\n                    node[LISTENERS] = node[LISTENERS] || {};\r\n                    if (!node[LISTENERS][prop]) {\r\n                        node[LISTENERS][prop] = [\r\n                            event => {\r\n                                node[LISTENERS][prop][1](event);\r\n                            }\r\n                        ];\r\n                    }\r\n                    node.addEventListener(prop, node[LISTENERS][prop][0]);\r\n                }\r\n                node[LISTENERS][prop][1] = next[prop];\r\n            }\r\n        } else if (prop in next) {\r\n            if ((prop in node && !isSvg) || (isSvg && prop === \"style\")) {\r\n                if (prop === \"style\") {\r\n                    if (typeof next[prop] === \"object\") {\r\n                        let prevStyle = prev[prop] || {},\r\n                            nextStyle = next[prop];\r\n                        for (let prop in nextStyle) {\r\n                            if (prevStyle[prop] !== nextStyle[prop]) {\r\n                                if (prop[0] === \"-\") {\r\n                                    node.style.setProperty(\r\n                                        prop,\r\n                                        nextStyle[prop]\r\n                                    );\r\n                                } else {\r\n                                    node.style[prop] = nextStyle[prop];\r\n                                }\r\n                            }\r\n                        }\r\n                        // next[prop] = { ...prevStyle, ...nextStyle };\r\n                    } else {\r\n                        node.style.cssText = next[prop];\r\n                    }\r\n                } else {\r\n                    node[prop] = next[prop];\r\n                }\r\n            } else {\r\n                isSvg\r\n                    ? node.setAttributeNS(null, prop, next[prop])\r\n                    : node.setAttribute(prop, next[prop]);\r\n            }\r\n        } else {\r\n            node.removeAttribute(prop);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Issues the deletion of node and its children\r\n * @param {HTMLElement} base\r\n */\r\nexport function emitRemove(base) {\r\n    let { prev = new VDom() } = (base && base[MASTER]) || {},\r\n        children = base.childNodes;\r\n    base[REMOVE] = true;\r\n    prev.emit(\"remove\", base);\r\n    for (let i = 0; i < children.length; i++) {\r\n        emitRemove(children[i]);\r\n    }\r\n    prev.emit(\"removed\", base);\r\n}\r\n"],"names":["VDom","tag","props","children","this","Object","root","parent","shadowRoot","remove","child","removeChild","append","appendChild","clone","emit","prop","prevent","ref","args","let","attachShadow","options","delay","COMPONENTS","PREVIOUS","REMOVE","LISTENERS","IGNORE","Component","state","isSvg","deep","key","components","context","render","base","diff","setTimeout","node","next","currentKey","currentComponents","isCreate","component","prev","addContext","document","createElementNS","createElement","createTextNode","create","length","firstChild","newChild","oldChild","replaceChild","replace","emitRemove","MASTER","childNodes","i","prevKeys","keys","nextKeys","concat","define","test","mode","isFnPrev","isFnNext","removeEventListener","event","addEventListener","prevStyle","nextStyle","style","setProperty","cssText","setAttributeNS","setAttribute","removeAttribute","diffProps","nextParent","move","Math","max","childI","textContent","value","Array","isArray","push"],"mappings":"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"}